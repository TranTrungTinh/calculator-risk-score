/* eslint-disable camelcase */
/*
 * Copyright 2017 ClinRisk Ltd.
 *
 * This file is part of QDiabetes-2018 (https://qdiabetes.org).
 *
 * QDiabetes-2018 is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * QDiabetes-2018 is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with QDiabetes-2018.  If not, see http://www.gnu.org/licenses/.
 *
 * Additional terms
 *
 * The following disclaimer must be held together with any risk score score generated by this code.
 * If the score is displayed, then this disclaimer must be displayed or otherwise be made easily accessible, e.g. by a prominent link alongside it.
 *   The initial version of this file, to be found at http://qdiabetes.org, faithfully implements QDiabetes-2018.
 *   ClinRisk Ltd. have released this code under the GNU Affero General Public License to enable others to implement the algorithm faithfully.
 *   However, the nature of the GNU Affero General Public License is such that we cannot prevent, for example, someone accidentally
 *   altering the coefficients, getting the inputs wrong, or just poor programming.
 *   ClinRisk Ltd. stress, therefore, that it is the responsibility of the end user to check that the source that they receive produces the same
 *   results as the original code found at http://qdiabetes.org.
 *   Inaccurate implementations of risk scores can lead to wrong patients being given the wrong treatment.
 *
 * End of additional terms
 *
 */

// Model C

export default function (
  age, b_atypicalantipsy, b_corticosteroids, b_cvd, b_gestdiab, b_learning, b_manicschiz, b_pos, b_statin, b_treatedhyp, bmi, ethrisk, fh_diab, hba1c, smoke_cat, surv, town
) {
  surv = 10
  const survivor = [
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0.988788545131683
  ]

  /* The conditional arrays */

  const Iethrisk = [
    0,
    0,
    0.5990951599291540800000000,
    0.7832030965635389300000000,
    1.1947351247960103000000000,
    0.7141744699168143300000000,
    0.1195328468388768800000000,
    0.0136688728784904270000000,
    0.5709226537693945500000000,
    0.1709107628106929200000000
  ]
  const Ismoke = [
    0,
    0.0658482585100006730000000,
    0.1458413689734224000000000,
    0.1525864247480118700000000,
    0.3078741679661397600000000
  ]

  /* Applying the fractional polynomial transforms */
  /* (which includes scaling)                      */

  let dage = age
  dage = dage / 10
  let age_1 = dage ** 0.5
  let age_2 = dage ** 3
  let dbmi = bmi
  dbmi = dbmi / 10
  let bmi_2 = dbmi ** 3
  let bmi_1 = dbmi
  let dhba1c = hba1c
  dhba1c = dhba1c / 10
  let hba1c_1 = dhba1c ** 0.5
  let hba1c_2 = dhba1c

  /* Centring the continuous variables */

  age_1 = age_1 - 2.123332023620606
  age_2 = age_2 - 91.644744873046875
  bmi_1 = bmi_1 - 2.571253299713135
  bmi_2 = bmi_2 - 16.999439239501953
  hba1c_1 = hba1c_1 - 1.886751174926758
  hba1c_2 = hba1c_2 - 3.559829950332642
  town = town - 0.391116052865982

  /* Start of Sum */
  let a = 0

  /* The conditional sums */

  a += Iethrisk[ethrisk]
  a += Ismoke[smoke_cat]

  /* Sum from continuous values */

  a += age_1 * 3.5655214891947722000000000
  a += age_2 * -0.0056158243572733135000000
  a += bmi_1 * 2.5043028874544841000000000
  a += bmi_2 * -0.0428758018926904610000000
  a += hba1c_1 * 8.7368031307362184000000000
  a += hba1c_2 * -0.0782313866699499700000000
  a += town * 0.0358668220563482940000000

  /* Sum from boolean values */

  a += b_atypicalantipsy * 0.5497633311042200400000000
  a += b_corticosteroids * 0.1687220550638970400000000
  a += b_cvd * 0.1644330036273934400000000
  a += b_gestdiab * 1.1250098105171140000000000
  a += b_learning * 0.2891205831073965800000000
  a += b_manicschiz * 0.3182512249068407700000000
  a += b_pos * 0.3380644414098174500000000
  a += b_statin * 0.4559396847381116400000000
  a += b_treatedhyp * 0.4040022295023758000000000
  a += fh_diab * 0.4428015404826031700000000

  /* Sum from interaction terms */

  a += age_1 * b_atypicalantipsy * -0.8125434197162131300000000
  a += age_1 * b_learning * -0.9084665765269808200000000
  a += age_1 * b_statin * -1.8557960585560658000000000
  a += age_1 * bmi_1 * 0.6023218765235252000000000
  a += age_1 * bmi_2 * -0.0344950383968044700000000
  a += age_1 * fh_diab * -0.2727571351506187200000000
  a += age_1 * hba1c_1 * 25.4412033227367150000000000
  a += age_1 * hba1c_2 * -6.8076080421556107000000000
  a += age_2 * b_atypicalantipsy * 0.0004665611306005428000000
  a += age_2 * b_learning * 0.0008518980139928006500000
  a += age_2 * b_statin * 0.0022627250963352537000000
  a += age_2 * bmi_1 * -0.0043386645663133425000000
  a += age_2 * bmi_2 * 0.0001162778561671208900000
  a += age_2 * fh_diab * 0.0004354519795220774900000
  a += age_2 * hba1c_1 * -0.0522541355885925220000000
  a += age_2 * hba1c_2 * 0.0140548259061144530000000

  /* Calculate the score itself */
  const score = 100.0 * (1 - (survivor[surv]) ** Math.exp(a))
  return score
}
