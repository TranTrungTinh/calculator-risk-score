/* eslint-disable camelcase */
/*
 * Copyright 2013 ClinRisk Ltd.
 *
 * This file is part of QCancer-2013 (http://qcancer.org, http://svn.clinrisk.co.uk/opensource/qcancer).
 *
 * QCancer-2013 is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * QCancer-2013 is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with QCancer-2013.  If not, see <http://www.gnu.org/licenses/>.
 *
 * Additional terms
 *
 * The following disclaimer must be displayed alongside any risk score generated by this code.
 *   The initial version of this file, to be found at http://svn.clinrisk.co.uk/opensource/qcancer, faithfully implements QCancer-2013.
 *   We have released this code under the GNU Affero General Public License to enable others to implement the algorithm faithfully.
 *   However, the nature of the GNU Affero General Public License is such that we cannot prevent, for example, someone accidentally
 *   altering the coefficients, getting the inputs wrong, or just poor programming.
 *   We stress, therefore, that it is the responsibility of the end user to check that the source that they receive produces the same results as the original code posted at http://svn.clinrisk.co.uk/opensource/qcancer.
 *   Inaccurate implementations of risk scores can lead to wrong patients being given the wrong treatment.
 *
 * This file has been auto-generated.
 * XML source: Q76_cancer2_15_1.xml
 * STATA dta time stamp: 27 Aug 2012 13:27
 * This file was created on: Thu 27 Jun 2013 09:04:34 BST
 */
/* blood_cancer */

function blood_cancer_male (
  age, bmi, c_hb, new_abdodist, new_abdopain, new_appetiteloss, new_dysphagia, new_haematuria, new_haemoptysis, new_indigestion, new_necklump, new_nightsweats, new_testicularlump, new_vte, new_weightloss, town
) {
  // const survivor = []

  /* The conditional arrays */

  /* Applying the fractional polynomial transforms */
  /* (which includes scaling)                      */

  let dage = age
  dage = dage / 10
  let age_1 = dage
  let age_2 = dage * Math.log(dage)
  let dbmi = bmi
  dbmi = dbmi / 10
  let bmi_1 = dbmi ** -2
  let bmi_2 = dbmi

  /* Centring the continuous variables */

  age_1 = age_1 - 4.800777912139893
  age_2 = age_2 - 7.531354427337647
  bmi_1 = bmi_1 - 0.146067067980766
  bmi_2 = bmi_2 - 2.616518735885620
  town = town - -0.264977723360062

  /* Start of Sum */
  let a = 0

  /* The conditional sums */

  /* Sum from continuous values */

  a += age_1 * 3.4970179354556610000000000
  a += age_2 * -1.0806801421562633000000000
  a += bmi_1 * 0.9519259479511792400000000
  a += bmi_2 * 0.1714669358410085800000000
  a += town * -0.0277062426752491610000000

  /* Sum from boolean values */

  a += c_hb * 1.8905802113004144000000000
  a += new_abdodist * 0.8430432197211393800000000
  a += new_abdopain * 0.6226473288294992500000000
  a += new_appetiteloss * 1.0672150380753760000000000
  a += new_dysphagia * 0.5419443056595199000000000
  a += new_haematuria * 0.4607538085363521700000000
  a += new_haemoptysis * 0.9501446899241836600000000
  a += new_indigestion * 0.5635686569331337400000000
  a += new_necklump * 3.1567783466839603000000000
  a += new_nightsweats * 1.5201300180753576000000000
  a += new_testicularlump * 0.9957524928245107300000000
  a += new_vte * 0.6142589726132866600000000
  a += new_weightloss * 1.2233663263194712000000000

  /* Sum from interaction terms */

  /* Calculate the score itself */
  const score = a + -7.2591289466850277000000000
  return score
}

/* colorectal_cancer */

function colorectal_cancer_male (
  age, alcohol_cat4, bmi, c_hb, fh_gicancer, new_abdodist, new_abdopain, new_appetiteloss, new_rectalbleed, new_weightloss, s1_bowelchange, s1_constipation
) {
  // const survivor = []

  /* The conditional arrays */

  const Ialcohol = [
    0,
    0.0674431700268591780000000,
    0.2894952197787854000000000,
    0.4419539984974097400000000
  ]

  /* Applying the fractional polynomial transforms */
  /* (which includes scaling)                      */

  let dage = age
  dage = dage / 10
  let age_1 = dage
  let age_2 = dage * Math.log(dage)
  let dbmi = bmi
  dbmi = dbmi / 10
  let bmi_1 = dbmi ** -2
  let bmi_2 = dbmi

  /* Centring the continuous variables */

  age_1 = age_1 - 4.800777912139893
  age_2 = age_2 - 7.531354427337647
  bmi_1 = bmi_1 - 0.146067067980766
  bmi_2 = bmi_2 - 2.616518735885620

  /* Start of Sum */
  let a = 0

  /* The conditional sums */

  a += Ialcohol[alcohol_cat4]

  /* Sum from continuous values */

  a += age_1 * 7.2652842514036369000000000
  a += age_2 * -2.3119103657424414000000000
  a += bmi_1 * 0.4591530847132721000000000
  a += bmi_2 * 0.1402651669090599400000000

  /* Sum from boolean values */

  a += c_hb * 1.4066322376473517000000000
  a += fh_gicancer * 0.4057285321010044600000000
  a += new_abdodist * 1.3572627165452165000000000
  a += new_abdopain * 1.5179997924486877000000000
  a += new_appetiteloss * 0.5421335457752113300000000
  a += new_rectalbleed * 2.8846500840638964000000000
  a += new_weightloss * 1.1082218896963933000000000
  a += s1_bowelchange * 1.2962496832506105000000000
  a += s1_constipation * 0.2284256115498967100000000

  /* Sum from interaction terms */

  /* Calculate the score itself */
  const score = a + -7.6876342765226262000000000
  return score
}

/* gastro_oesophageal_cancer */

function gastro_oesophageal_cancer_male (
  age, bmi, c_hb, new_abdopain, new_appetiteloss, new_dysphagia, new_gibleed, new_heartburn, new_indigestion, new_necklump, new_weightloss, smoke_cat
) {
  // const survivor = []

  /* The conditional arrays */

  const Ismoke = [
    0,
    0.3532685922239948200000000,
    0.6343201557712291300000000,
    0.6500819736904158700000000,
    0.6273413010559952800000000
  ]

  /* Applying the fractional polynomial transforms */
  /* (which includes scaling)                      */

  let dage = age
  dage = dage / 10
  let age_1 = dage
  let age_2 = dage * Math.log(dage)
  let dbmi = bmi
  dbmi = dbmi / 10
  let bmi_1 = dbmi ** -2
  let bmi_2 = dbmi

  /* Centring the continuous variables */

  age_1 = age_1 - 4.800777912139893
  age_2 = age_2 - 7.531354427337647
  bmi_1 = bmi_1 - 0.146067067980766
  bmi_2 = bmi_2 - 2.616518735885620

  /* Start of Sum */
  let a = 0

  /* The conditional sums */

  a += Ismoke[smoke_cat]

  /* Sum from continuous values */

  a += age_1 * 8.5841509312915623000000000
  a += age_2 * -2.7650409450116360000000000
  a += bmi_1 * 4.1816752831070323000000000
  a += bmi_2 * 0.6247106288954960000000000

  /* Sum from boolean values */

  a += c_hb * 1.1065543049459461000000000
  a += new_abdopain * 1.0280133043080188000000000
  a += new_appetiteloss * 1.1868017500634926000000000
  a += new_dysphagia * 3.8253199428642568000000000
  a += new_gibleed * 1.8454733322333583000000000
  a += new_heartburn * 1.1727679169313121000000000
  a += new_indigestion * 1.8843639195644077000000000
  a += new_necklump * 0.8414696385393357600000000
  a += new_weightloss * 1.4698638306735652000000000

  /* Sum from interaction terms */

  /* Calculate the score itself */
  const score = a + -8.4208700270300625000000000
  return score
}

/* lung_cancer */

function lung_cancer_male (
  age, b_copd, bmi, c_hb, new_abdopain, new_appetiteloss, new_dysphagia, new_haemoptysis, new_indigestion, new_necklump, new_nightsweats, new_vte, new_weightloss, s1_cough, smoke_cat, town
) {
  // const survivor = []

  /* The conditional arrays */

  const Ismoke = [
    0,
    0.8408574737524464600000000,
    1.4966499028172435000000000,
    1.7072509513243501000000000,
    1.8882615411851338000000000
  ]

  /* Applying the fractional polynomial transforms */
  /* (which includes scaling)                      */

  let dage = age
  dage = dage / 10
  let age_1 = dage
  let age_2 = dage * Math.log(dage)
  let dbmi = bmi
  dbmi = dbmi / 10
  let bmi_1 = dbmi ** -2
  let bmi_2 = dbmi

  /* Centring the continuous variables */

  age_1 = age_1 - 4.800777912139893
  age_2 = age_2 - 7.531354427337647
  bmi_1 = bmi_1 - 0.146067067980766
  bmi_2 = bmi_2 - 2.616518735885620
  town = town - -0.264977723360062

  /* Start of Sum */
  let a = 0

  /* The conditional sums */

  a += Ismoke[smoke_cat]

  /* Sum from continuous values */

  a += age_1 * 11.9178089602254960000000000
  a += age_2 * -3.8503786390624457000000000
  a += bmi_1 * 1.8605584222949920000000000
  a += bmi_2 * -0.1132750038800869900000000
  a += town * 0.0285745703610741780000000

  /* Sum from boolean values */

  a += b_copd * 0.5526127629694074200000000
  a += c_hb * 0.8243789117069311200000000
  a += new_abdopain * 0.3996424879103057700000000
  a += new_appetiteloss * 0.7487413720163385000000000
  a += new_dysphagia * 1.0410482089004374000000000
  a += new_haemoptysis * 2.8241680746676243000000000
  a += new_indigestion * 0.2689673675929089000000000
  a += new_necklump * 1.1065323833644807000000000
  a += new_nightsweats * 0.7890696583845964200000000
  a += new_vte * 0.7991150296038754800000000
  a += new_weightloss * 1.3738119234931856000000000
  a += s1_cough * 0.5154179003437485700000000

  /* Sum from interaction terms */

  /* Calculate the score itself */
  const score = a + -8.7166918098019277000000000
  return score
}

/* other_cancer */

function other_cancer_male (
  age, b_copd, b_type2, bmi, c_hb, new_abdodist, new_abdopain, new_appetiteloss, new_dysphagia, new_gibleed, new_haematuria, new_haemoptysis, new_indigestion, new_necklump, new_vte, new_weightloss, s1_bowelchange, s1_constipation, smoke_cat
) {
  // const survivor = []

  /* The conditional arrays */

  const Ismoke = [
    0,
    0.1306282330648657900000000,
    0.4156824612593108500000000,
    0.4034160393541376700000000,
    0.5290383323065179800000000
  ]

  /* Applying the fractional polynomial transforms */
  /* (which includes scaling)                      */

  let dage = age
  dage = dage / 10
  let age_1 = dage
  let age_2 = dage * Math.log(dage)
  let dbmi = bmi
  dbmi = dbmi / 10
  let bmi_1 = dbmi ** -2
  let bmi_2 = dbmi

  /* Centring the continuous variables */

  age_1 = age_1 - 4.800777912139893
  age_2 = age_2 - 7.531354427337647
  bmi_1 = bmi_1 - 0.146067067980766
  bmi_2 = bmi_2 - 2.616518735885620

  /* Start of Sum */
  let a = 0

  /* The conditional sums */

  a += Ismoke[smoke_cat]

  /* Sum from continuous values */

  a += age_1 * 4.1156415170875666000000000
  a += age_2 * -1.2786588534988286000000000
  a += bmi_1 * 2.4067691257533248000000000
  a += bmi_2 * 0.2566799616335219100000000

  /* Sum from boolean values */

  a += b_copd * 0.2364397443316423000000000
  a += b_type2 * 0.2390212489103255300000000
  a += c_hb * 0.9765525865177192600000000
  a += new_abdodist * 0.7203822227648433200000000
  a += new_abdopain * 0.8372159579979499000000000
  a += new_appetiteloss * 1.1647610659454599000000000
  a += new_dysphagia * 1.0747326525064285000000000
  a += new_gibleed * 0.4468867932306167000000000
  a += new_haematuria * 0.5276884520139836200000000
  a += new_haemoptysis * 0.6465976131208517300000000
  a += new_indigestion * 0.3156125379576864000000000
  a += new_necklump * 2.9472448787274570000000000
  a += new_vte * 1.0954486585194212000000000
  a += new_weightloss * 1.0550815022699203000000000
  a += s1_bowelchange * 0.5059485944682162700000000
  a += s1_constipation * 0.6035170412091727100000000

  /* Sum from interaction terms */

  /* Calculate the score itself */
  const score = a + -6.7132875682858542000000000
  return score
}

/* pancreatic_cancer */

function pancreatic_cancer_male (
  age, b_chronicpan, b_type2, bmi, new_abdopain, new_appetiteloss, new_dysphagia, new_gibleed, new_indigestion, new_vte, new_weightloss, s1_constipation, smoke_cat, town
) {
  // const survivor = []

  /* The conditional arrays */

  const Ismoke = [
    0,
    0.2783298172089973500000000,
    0.3079418928917603300000000,
    0.5647359394991128300000000,
    0.7765125427126866600000000
  ]

  /* Applying the fractional polynomial transforms */
  /* (which includes scaling)                      */

  let dage = age
  dage = dage / 10
  let age_1 = dage
  let age_2 = dage * Math.log(dage)
  let dbmi = bmi
  dbmi = dbmi / 10
  let bmi_1 = dbmi ** -2
  let bmi_2 = dbmi

  /* Centring the continuous variables */

  age_1 = age_1 - 4.800777912139893
  age_2 = age_2 - 7.531354427337647
  bmi_1 = bmi_1 - 0.146067067980766
  bmi_2 = bmi_2 - 2.616518735885620
  town = town - -0.264977723360062

  /* Start of Sum */
  let a = 0

  /* The conditional sums */

  a += Ismoke[smoke_cat]

  /* Sum from continuous values */

  a += age_1 * 8.0275778709105907000000000
  a += age_2 * -2.6082429130982798000000000
  a += bmi_1 * 1.7819574994736820000000000
  a += bmi_2 * -0.0249600064895699750000000
  a += town * -0.0352288140617050480000000

  /* Sum from boolean values */

  a += b_chronicpan * 0.9913246347991823100000000
  a += b_type2 * 0.7396905098202540800000000
  a += new_abdopain * 2.1506984011721579000000000
  a += new_appetiteloss * 1.4272326009960661000000000
  a += new_dysphagia * 0.9168689207526066200000000
  a += new_gibleed * 0.9881061033081149900000000
  a += new_indigestion * 1.2837402377092237000000000
  a += new_vte * 1.1741805346104719000000000
  a += new_weightloss * 2.0466064239967046000000000
  a += s1_constipation * 0.6240548033048214400000000

  /* Sum from interaction terms */

  /* Calculate the score itself */
  const score = a + -9.2275729512009956000000000
  return score
}

/* prostate_cancer */

function prostate_cancer_male (
  age, bmi, fh_prostatecancer, new_abdopain, new_appetiteloss, new_haematuria, new_rectalbleed, new_testespain, new_testicularlump, new_vte, new_weightloss, s1_impotence, s1_nocturia, s1_urinaryfreq, s1_urinaryretention, town
) {
  // const survivor = []

  /* The conditional arrays */

  /* Applying the fractional polynomial transforms */
  /* (which includes scaling)                      */

  let dage = age
  dage = dage / 10
  let age_1 = dage
  let age_2 = dage * Math.log(dage)
  let dbmi = bmi
  dbmi = dbmi / 10
  let bmi_1 = dbmi ** -2
  let bmi_2 = dbmi

  /* Centring the continuous variables */

  age_1 = age_1 - 4.800777912139893
  age_2 = age_2 - 7.531354427337647
  bmi_1 = bmi_1 - 0.146067067980766
  bmi_2 = bmi_2 - 2.616518735885620
  town = town - -0.264977723360062

  /* Start of Sum */
  let a = 0

  /* The conditional sums */

  /* Sum from continuous values */

  a += age_1 * 14.8391010426566920000000000
  a += age_2 * -4.8051341054408843000000000
  a += bmi_1 * -2.8369035324107057000000000
  a += bmi_2 * -0.3634984265900051400000000
  a += town * -0.0214278653071876720000000

  /* Sum from boolean values */

  a += fh_prostatecancer * 1.2892957682128878000000000
  a += new_abdopain * 0.4445588372860774200000000
  a += new_appetiteloss * 0.3425581971534915100000000
  a += new_haematuria * 1.4890866073593347000000000
  a += new_rectalbleed * 0.3478612952033963700000000
  a += new_testespain * 0.6387609350076407500000000
  a += new_testicularlump * 0.6338177436853567000000000
  a += new_vte * 0.5758190804196261500000000
  a += new_weightloss * 0.7528736226665873100000000
  a += s1_impotence * 0.3692180041534241500000000
  a += s1_nocturia * 1.0381560026453696000000000
  a += s1_urinaryfreq * 0.7036410253080365200000000
  a += s1_urinaryretention * 0.8525703399435586900000000

  /* Sum from interaction terms */

  /* Calculate the score itself */
  const score = a + -7.8871012697298699000000000
  return score
}

/* renal_tract_cancer */

function renal_tract_cancer_male (
  age, bmi, new_abdopain, new_haematuria, new_nightsweats, new_weightloss, smoke_cat
) {
  // const survivor = []

  /* The conditional arrays */

  const Ismoke = [
    0,
    0.4183007995792849000000000,
    0.6335162368278742800000000,
    0.7847230879322205600000000,
    0.9631091411295211700000000
  ]

  /* Applying the fractional polynomial transforms */
  /* (which includes scaling)                      */

  let dage = age
  dage = dage / 10
  let age_1 = dage
  let age_2 = dage * Math.log(dage)
  let dbmi = bmi
  dbmi = dbmi / 10
  let bmi_1 = dbmi ** -2
  let bmi_2 = dbmi

  /* Centring the continuous variables */

  age_1 = age_1 - 4.800777912139893
  age_2 = age_2 - 7.531354427337647
  bmi_1 = bmi_1 - 0.146067067980766
  bmi_2 = bmi_2 - 2.616518735885620

  /* Start of Sum */
  let a = 0

  /* The conditional sums */

  a += Ismoke[smoke_cat]

  /* Sum from continuous values */

  a += age_1 * 6.2113803461111061000000000
  a += age_2 * -1.9835661506953870000000000
  a += bmi_1 * -1.5995682550089132000000000
  a += bmi_2 * -0.0777696836930753120000000

  /* Sum from boolean values */

  a += new_abdopain * 0.6089465678909584700000000
  a += new_haematuria * 4.1596453389556789000000000
  a += new_nightsweats * 1.0520790556587876000000000
  a += new_weightloss * 0.6824635274408537000000000

  /* Sum from interaction terms */

  /* Calculate the score itself */
  const score = a + -8.3006555398942510000000000
  return score
}

/* testicular_cancer */

function testicular_cancer_male (
  age, bmi, new_testespain, new_testicularlump, new_vte
) {
  // const survivor = []

  /* The conditional arrays */

  /* Applying the fractional polynomial transforms */
  /* (which includes scaling)                      */

  let dage = age
  dage = dage / 10
  let age_1 = dage
  let age_2 = dage * Math.log(dage)
  let dbmi = bmi
  dbmi = dbmi / 10
  let bmi_1 = dbmi ** -2
  let bmi_2 = dbmi

  /* Centring the continuous variables */

  age_1 = age_1 - 4.800777912139893
  age_2 = age_2 - 7.531354427337647
  bmi_1 = bmi_1 - 0.146067067980766
  bmi_2 = bmi_2 - 2.616518735885620

  /* Start of Sum */
  let a = 0

  /* The conditional sums */

  /* Sum from continuous values */

  a += age_1 * 3.9854184482476338000000000
  a += age_2 * -1.7426970576325218000000000
  a += bmi_1 * 2.0160796798276812000000000
  a += bmi_2 * -0.0427340437454773740000000

  /* Sum from boolean values */

  a += new_testespain * 2.7411880902787775000000000
  a += new_testicularlump * 5.2200886149323269000000000
  a += new_vte * 2.2416746922896493000000000

  /* Sum from interaction terms */

  /* Calculate the score itself */
  const score = a + -8.7592209887895898000000000
  return score
}

/**
 * ? Mapping Value Set
 * @param {*} age
 * @param {*} alcohol_cat4 -> RF.4
 * @param {*} b_chronicpan -> RF.27
 * @param {*} b_copd -> RF.28
 * @param {*} b_type2 -> RF.26
 * @param {*} bmi
 * @param {*} c_hb -> RF.56
 * @param {*} fh_gicancer -> RF.22
 * @param {*} fh_prostatecancer -> RF.23
 * @param {*} new_abdodist -> RF.33
 * @param {*} new_abdopain -> RF.32
 * @param {*} new_appetiteloss -> RF.30
 * @param {*} new_dysphagia -> RF.34
 * @param {*} new_gibleed -> RF.38
 * @param {*} new_haematuria -> RF.40
 * @param {*} new_haemoptysis -> RF.39
 * @param {*} new_heartburn -> RF.35
 * @param {*} new_indigestion -> RF.36
 * @param {*} new_necklump -> RF.43
 * @param {*} new_nightsweats -> RF.44
 * @param {*} new_rectalbleed -> RF.37
 * @param {*} new_testespain -> RF.42
 * @param {*} new_testicularlump -> RF.41
 * @param {*} new_vte -> RF.45
 * @param {*} new_weightloss -> RF.31
 * @param {*} s1_bowelchange -> RF.52
 * @param {*} s1_constipation -> RF.53
 * @param {*} s1_cough -> RF.54
 * @param {*} s1_impotence -> RF.60
 * @param {*} s1_nocturia -> RF.59
 * @param {*} s1_urinaryfreq -> RF.58
 * @param {*} s1_urinaryretention -> RF.57
 * @param {*} smoke_cat -> RF.3
 * @param {*} town
 * @returns
 */

export default function (
  age,
  alcohol_cat4,
  b_chronicpan,
  b_copd,
  b_type2,
  bmi,
  c_hb,
  fh_gicancer,
  fh_prostatecancer,
  new_abdodist,
  new_abdopain,
  new_appetiteloss,
  new_dysphagia,
  new_gibleed,
  new_haematuria,
  new_haemoptysis,
  new_heartburn,
  new_indigestion,
  new_necklump,
  new_nightsweats,
  new_rectalbleed,
  new_testespain,
  new_testicularlump,
  new_vte,
  new_weightloss,
  s1_bowelchange,
  s1_constipation,
  s1_cough,
  s1_impotence,
  s1_nocturia,
  s1_urinaryfreq,
  s1_urinaryretention,
  smoke_cat,
  town
) {
  const allScore = {
    bloodCancer: blood_cancer_male(age, bmi, c_hb, new_abdodist, new_abdopain, new_appetiteloss, new_dysphagia, new_haematuria, new_haemoptysis, new_indigestion, new_necklump, new_nightsweats, new_testicularlump, new_vte, new_weightloss, town),
    colorectalCancer: colorectal_cancer_male(age, alcohol_cat4, bmi, c_hb, fh_gicancer, new_abdodist, new_abdopain, new_appetiteloss, new_rectalbleed, new_weightloss, s1_bowelchange, s1_constipation),
    gastroOesophagealCancer: gastro_oesophageal_cancer_male(age, bmi, c_hb, new_abdopain, new_appetiteloss, new_dysphagia, new_gibleed, new_heartburn, new_indigestion, new_necklump, new_weightloss, smoke_cat),
    lungCancer: lung_cancer_male(age, b_copd, bmi, c_hb, new_abdopain, new_appetiteloss, new_dysphagia, new_haemoptysis, new_indigestion, new_necklump, new_nightsweats, new_vte, new_weightloss, s1_cough, smoke_cat, town),
    otherCancer: other_cancer_male(age, b_copd, b_type2, bmi, c_hb, new_abdodist, new_abdopain, new_appetiteloss, new_dysphagia, new_gibleed, new_haematuria, new_haemoptysis, new_indigestion, new_necklump, new_vte, new_weightloss, s1_bowelchange, s1_constipation, smoke_cat),
    pancreaticCancer: pancreatic_cancer_male(age, b_chronicpan, b_type2, bmi, new_abdopain, new_appetiteloss, new_dysphagia, new_gibleed, new_indigestion, new_vte, new_weightloss, s1_constipation, smoke_cat, town),
    prostateCancer: prostate_cancer_male(age, bmi, fh_prostatecancer, new_abdopain, new_appetiteloss, new_haematuria, new_rectalbleed, new_testespain, new_testicularlump, new_vte, new_weightloss, s1_impotence, s1_nocturia, s1_urinaryfreq, s1_urinaryretention, town),
    renalTractCancer: renal_tract_cancer_male(age, bmi, new_abdopain, new_haematuria, new_nightsweats, new_weightloss, smoke_cat),
    testicularCancer: testicular_cancer_male(age, bmi, new_testespain, new_testicularlump, new_vte)
  }
  let sum = 1
  let sum2 = 0
  Object.keys(allScore).forEach((key) => {
    allScore[key] = Math.exp(allScore[key])
    sum += allScore[key]
  })
  Object.keys(allScore).forEach((key) => {
    allScore[key] *= 100 / sum
    sum2 += allScore[key]
  })
  allScore.none = 100 - sum2
  return allScore
}
